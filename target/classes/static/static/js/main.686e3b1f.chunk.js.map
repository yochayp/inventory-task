{"version":3,"sources":["logo.svg","components/NewItem.js","components/InventoryList.js","App.js","reportWebVitals.js","index.js"],"names":["NewItem","props","useState","name","setName","amount","setAmount","inventoryCode","setInventoryCode","show","setShow","validInput","isNaN","parseInt","Number","alert","undefined","handleClose","Col","className","Button","variant","onClick","Modal","onHide","Form","onSubmit","e","preventDefault","addItem","console","log","Header","closeButton","Title","Body","InputGroup","FormControl","id","placeholder","value","onChange","target","Footer","type","InventoryList","itemsList","setItemsList","showUpdate","setShowUpdate","selectedItem","setSelectedItem","useEffect","fetch","method","then","response","json","data","list","map","item","itemId","Row","updateItem","itemToDelete","headers","body","JSON","stringify","res","filter","catch","err","Navbar","Container","Table","striped","bordered","hover","url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.686e3b1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\n\r\nimport './NewItem.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { Modal, Button, Form, InputGroup, FormControl, Col } from 'react-bootstrap';\r\n\r\nexport default function NewItem(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [amount, setAmount] = useState();\r\n    const [inventoryCode, setInventoryCode] = useState('');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const saveItem = (e) => {\r\n        e.preventDefault();\r\n      /*  if (inventoryCode === undefined)\r\n            alert('Item must have inventory code!')\r\n        else console.log(name + inventoryCode)*/\r\n        if (validInput()) {\r\n            props.addItem({\r\n                name: name,\r\n                amount: amount,\r\n                inventoryCode: inventoryCode\r\n            });\r\n            console.log('fdsfsfgfsgfs')\r\n        }\r\n\r\n    }\r\n\r\n    const validInput = () => {\r\n        //check if amount is a number\r\n        if (!(!isNaN(amount) &&\r\n            parseInt(Number(amount)) == amount &&\r\n            !isNaN(parseInt(amount, 10)))) {\r\n            alert('Invalid Amount!');\r\n            return false;\r\n        }\r\n        //check if name is not empty\r\n        if (name === '') {\r\n            alert('Item must have a name!');\r\n            return false;\r\n        }\r\n        //check if inventory code is not empty\r\n        if (inventoryCode === undefined) {\r\n            alert('Item must have inventory code!')\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    const handleShow = () => {\r\n        setName('');\r\n        setAmount();\r\n        setInventoryCode();\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col className=\"d-flex  flex-column align-items-end\">\r\n                <Button className=\"new-item\" variant=\"dark\" onClick={handleShow}>\r\n                    New Item\r\n            </Button>\r\n            </Col>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form onSubmit={saveItem}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>new Item</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <InputGroup >\r\n                            <FormControl id='add-item' placeholder=\"enter item name...\"\r\n                                value={name || ''} onChange={(e) => setName(e.target.value)} />\r\n                        </InputGroup>\r\n\r\n                        <InputGroup >\r\n                            <FormControl id='add-amount' placeholder=\"enter item amount...\"\r\n                                value={amount || ''} onChange={(e) => setAmount(e.target.value)} />\r\n                        </InputGroup>\r\n                        <InputGroup >\r\n                            <FormControl id='add-inventory' placeholder=\"enter inventory code...\"\r\n                                value={inventoryCode || ''} onChange={(e) => setInventoryCode(e.target.value)} />\r\n                        </InputGroup>\r\n\r\n\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button type='submit' variant=\"primary\" onClick={handleClose}>\r\n                            Save\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport './InventoryList.css';\r\n\r\nimport NewItem from './NewItem';\r\nimport {  Row, Table, Container, Navbar, Modal, Form, Button } from 'react-bootstrap';\r\n\r\nimport { AiOutlineDelete, AiOutlinePlusCircle, AiOutlineMinusCircle } from 'react-icons/ai';\r\nimport { CgEditExposure } from 'react-icons/cg'\r\n\r\nexport default function InventoryList() {\r\n\r\n    const [itemsList, setItemsList] = useState([]);\r\n    const [amount, setAmount] = useState(0);\r\n    const [showUpdate, setShowUpdate] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('http://localhost:8080/api/Items', {\r\n            method: 'GET',\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {setItemsList(data)})\r\n    }, []);\r\n\r\n    const remove = (itemToDelete) => {\r\n        fetch('http://localhost:8080/api/Items', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(itemToDelete.itemId)\r\n        })\r\n            .then(res => {setItemsList(itemsList.filter((item) => item.itemId !== itemToDelete.itemId))})\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n\r\n    const addItem = (item) => {\r\n    \r\n        fetch('http://localhost:8080/api/Items', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {setItemsList([...itemsList, data])})\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        if (selectedItem.amount + amount < 0) alert('Not enough in stock');\r\n        else {\r\n            const url = \"http://localhost:8080/api/Items/\"+selectedItem.itemId;\r\n            fetch(url , {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(amount)\r\n            })\r\n                .then(() => {\r\n                        setItemsList(\r\n                        itemsList.map(item =>\r\n                            item.itemId === selectedItem.itemId ?{ ...item, amount: item.amount + amount } :item)\r\n                    )}\r\n                )\r\n                .catch(err => console.log(err));\r\n    \r\n        }\r\n    }\r\n\r\n    const updateItem = (item) => {\r\n        setShowUpdate(true);\r\n        setSelectedItem(item);\r\n        setAmount(0);\r\n    }\r\n    const handleClose = () => {\r\n        setShowUpdate(false);\r\n    }\r\n    const list = itemsList.map((item) => {\r\n        return (\r\n            <tr key={item.itemId}>\r\n                <td>{item.itemId}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.inventoryCode}</td>\r\n                <td>{item.amount}</td>\r\n                <td>\r\n                <Row className=\"utils\">\r\n                        <h3 className=\"plus-minus\"> <CgEditExposure onClick={() => updateItem(item)} /></h3>\r\n                        <h3 className=\"remove\"> <AiOutlineDelete onClick={() => remove(item)} /></h3>\r\n                    </Row>\r\n                   \r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Navbar className=\"justify-content\">\r\n                <h1>Inventory App</h1>\r\n                <NewItem addItem={addItem} />\r\n            </Navbar>\r\n\r\n            <Container className=\"table\">\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                            <th>Code</th>\r\n                            <th>Amount</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {list}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n            <Modal show={showUpdate} onHide={handleClose}>\r\n                <Form onSubmit={update}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Withdrawal/Deposit</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Row className=\"amount-cell\">\r\n                            <h3 className=\"plus\"><AiOutlinePlusCircle onClick={() => setAmount(amount + 1)} /></h3>\r\n                            {amount}\r\n                            <h3 className=\"minus\"> <AiOutlineMinusCircle onClick={() => setAmount(amount - 1)} /></h3>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button type='submit' variant=\"primary\" onClick={handleClose}>\r\n                            update\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport InventoryList from './components/InventoryList';\nimport NewItem from './components/NewItem';\nimport {Navbar} from 'react-bootstrap';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n   \n      <InventoryList/>\n    \n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n \n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}